[{"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\index.tsx":"1","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\reportWebVitals.ts":"2","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\App.tsx":"3","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Home.js":"4","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\PhenotypeSearch.js":"5","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Components\\MainMenuItem.js":"6","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\Components\\PhenotypeResultBreakdown.js":"7","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\ResultTable.js":"8","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\LoadingSpinner\\LoadingSpinner.js":"9"},{"size":616,"mtime":1613053084038,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1612365407714,"results":"12","hashOfConfig":"11"},{"size":844,"mtime":1613068422906,"results":"13","hashOfConfig":"11"},{"size":2427,"mtime":1613052894966,"results":"14","hashOfConfig":"11"},{"size":12618,"mtime":1613134152097,"results":"15","hashOfConfig":"11"},{"size":538,"mtime":1612366791587,"results":"16","hashOfConfig":"11"},{"size":8906,"mtime":1613137572209,"results":"17","hashOfConfig":"11"},{"size":2757,"mtime":1613034131496,"results":"18","hashOfConfig":"11"},{"size":1288,"mtime":1612565100863,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1s1jmwu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\index.tsx",[],["47","48"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\reportWebVitals.ts",[],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\App.tsx",["49","50"],"import React from 'react';\r\nimport './App.css';\r\n// @ts-ignore\r\nimport Home from \"./Home.js\";\r\n// @ts-ignore\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n// @ts-ignore\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport PhenotypeSearch from \"../PhenotypeSearch/PhenotypeSearch\";\r\n\r\nfunction App() {\r\n    return (<div className=\"App\">\r\n            <header className=\"App-header\">\r\n            </header>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route exact path=\"/PhenotypeSearch\">\r\n                        <PhenotypeSearch/>\r\n                    </Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Home.js",[],["51","52"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\PhenotypeSearch.js",["53","54","55","56","57","58","59","60"],"import React from 'react';\r\nimport './PhenotypeSearch.css';\r\nimport $ from 'jquery';\r\nimport {Button, InputGroup, FormControl, Form, Spinner} from 'react-bootstrap';\r\nimport ResultTable from \"../UtilityComponents/ResultTable\";\r\nimport PhenotypeResultBreakdown from \"./Components/PhenotypeResultBreakdown\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"../UtilityComponents/LoadingSpinner/LoadingSpinner\";\r\nimport configData from '../Config/config.json';\r\n\r\nclass PhenotypeSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedSpecies: \"Mouse\",\r\n            loading: false,\r\n            tableData: null,\r\n            liveSearchResults: [],\r\n            selectedPhenotype: null,\r\n            searchOpen: true,\r\n            breakdownData: null\r\n        };\r\n        this.search = this.search.bind(this);\r\n        this.searchClick = this.searchClick.bind(this);\r\n        this.retrieveLiveSearch = this.retrieveLiveSearch.bind(this);\r\n        this.liveSearchClick = this.liveSearchClick.bind(this);\r\n        this.searchRowClicked = this.searchRowClicked.bind(this);\r\n        this.resultBreakdownBackClicked = this.resultBreakdownBackClicked.bind(this);\r\n        this.speciesRadioChanged = this.speciesRadioChanged.bind(this);\r\n        this.getPreviousResults = this.getPreviousResults.bind(this);\r\n        this.getNextResults = this.getNextResults.bind(this);\r\n        this.preventFormSubmit = this.preventFormSubmit.bind(this);\r\n        this.page_num = 1;\r\n        this.liveCancelToken = axios.CancelToken.source();\r\n    }\r\n\r\n    componentDidMount() {\r\n        $(\"#userSearchInput\").focusin(function () {\r\n            $(\"#live-search\").show();\r\n        });\r\n        $(\"#userSearchInput\").focusout(function () {\r\n            $(\"#live-search\").hide();\r\n        })\r\n    }\r\n\r\n    getPreviousResults() {\r\n        if (this.page_num > 1) {\r\n            this.page_num -= 1;\r\n            this.search();\r\n        }\r\n    }\r\n\r\n    preventFormSubmit(e) {\r\n        e.preventDefault();\r\n        this.search();\r\n    }\r\n\r\n    resultBreakdownBackClicked(btn) {\r\n        this.setState({searchOpen: true});\r\n    }\r\n\r\n    getNextResults() {\r\n        this.page_num += 1;\r\n        this.search();\r\n    }\r\n\r\n    searchRowClicked(row) {\r\n        let selection = $(row.target).attr(\"data-id\");\r\n        this.setState({selectedPhenotype: selection, searchOpen: false});\r\n    }\r\n\r\n    liveSearchClick(term) {\r\n        var selection = $(term.currentTarget.lastChild).text();\r\n        $(\"#userSearchInput\").val(selection);\r\n        $(\"#live-search\").hide();\r\n        this.page_num = 1;\r\n        this.search();\r\n    }\r\n\r\n    retrieveLiveSearch() {\r\n        let input = $(\"#userSearchInput\").val();\r\n        if (input.length < 1) {\r\n            $(\"#live-search\").hide();\r\n            return;\r\n        }\r\n        let url_string = configData.api_server + \"livesearch.php?entry=\" + encodeURIComponent(input) + \"&species=\" + this.state.selectedSpecies;\r\n        if (input.length > 0) {\r\n            axios.get(url_string, {cancelToken: this.liveCancelToken.token})\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                        if (response.data.length == 0) {\r\n                            $(\"#live-search\").hide();\r\n                        } else {\r\n                            this.setState({liveSearchResults: response.data});\r\n                            $(\"#live-search\").show();\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"An error occurred retrieving live search results.\");\r\n                });\r\n        }\r\n    }\r\n\r\n    search() {\r\n        this.setState({loading: true});\r\n        let search_input = $(\"#userSearchInput\").val();\r\n        let human_pval = parseInt($(\"#human_pval_select\").val());\r\n        let mouse_pval = parseInt($(\"#mouse_pval_select\").val());\r\n\r\n        let url_string = configData.api_server + \"/controller.php?search=\" + encodeURIComponent(search_input) + \"&page=\" + this.page_num + \"&human_pval=\" + human_pval + \"&mouse_pval=\" + mouse_pval + \"&species=\" + this.state.selectedSpecies;\r\n        axios.get(url_string)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data) {\r\n                        result_total = response.data[1];\r\n                        if (result_total > 0) {\r\n                            this.setState({tableData: response.data[0], loading: false, searchOpen: true});\r\n                        } else {\r\n                            this.setState({tableData: \"No results found.\", loading: false, searchOpen: true});\r\n                        }\r\n                    } else {\r\n                        this.setState({loading: false, searchOpen: true, tableData: null});\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({loading: false, searchOpen: true, tableData: null});\r\n                console.log(\"An error occurred searching for phenotype results.\");\r\n            });\r\n    }\r\n\r\n    searchClick(e) {\r\n        e.preventDefault();\r\n        this.page_num = 1;\r\n        this.search();\r\n    }\r\n\r\n    speciesRadioChanged(e) {\r\n        if (e.target.id === \"mouse-radio\") {\r\n            this.setState({selectedSpecies: \"Mouse\"});\r\n        } else {\r\n            this.setState({selectedSpecies: \"Human\"});\r\n        }\r\n    }\r\n\r\n    displayTable(tableData) {\r\n        if (tableData === \"No results found.\")\r\n            return <p className=\"center\"><br/>{tableData}</p>\r\n        else\r\n            return <ResultTable tableData={tableData} onRowClick={this.searchRowClicked}/>\r\n\r\n    }\r\n\r\n    render() {\r\n        const {tableData, liveSearchResults, loading, searchOpen, selectedSpecies} = this.state;\r\n        if (searchOpen)\r\n            return (<div className=\"PhenotypeSearch\">\r\n                <div className=\"searchResultsContainer\">\r\n                    {/* Orthology Selection */}\r\n                    <div className=\"orthology-menu\">\r\n                        <h4>Search for comparative data on human-mouse homologues.</h4>\r\n                        <Form className=\"form\" onSubmit={this.preventFormSubmit}>\r\n                            <InputGroup className=\"input-group mb-3 mx-auto\">\r\n                                <FormControl id=\"userSearchInput\" autoComplete=\"off\"\r\n                                             placeholder={selectedSpecies === \"Human\" ? \"Human Phenotype (e.g. \\n\" +\r\n                                                 \"disproportionate tall stature)\" : \"Mouse Phenotype (e.g. abnormal lung elastance)\"}\r\n                                             onKeyUp={this.retrieveLiveSearch}/>\r\n                                <div id=\"live-search\" className=\"suggestions\">\r\n                                    {liveSearchResults ? liveSearchResults.map((record) => {\r\n                                        return (<a onClick={this.liveSearchClick}>\r\n                                            <div style={{\r\n                                                float: 'left',\r\n                                                'padding-left': '2%'\r\n                                            }}>{record.ontology.toUpperCase()}</div>\r\n                                            {record.FSN}</a>)\r\n                                    }) : null}\r\n                                </div>\r\n                            </InputGroup>\r\n                            <InputGroup className=\"input-group form-inline mb-3 mx-auto center\">\r\n                                <Form.Check name=\"speciesRadio\" onChange={this.speciesRadioChanged}\r\n                                            checked={selectedSpecies === \"Human\"} inline label=\"Human\" type=\"radio\"\r\n                                            id=\"human-radio\"/>\r\n                                <Form.Check name=\"speciesRadio\" onChange={this.speciesRadioChanged}\r\n                                            checked={selectedSpecies === \"Mouse\"} inline label=\"Mouse\" type=\"radio\"\r\n                                            id=\"mouse-radio\"/>\r\n                            </InputGroup>\r\n                            <InputGroup className=\"input-group form-inline mb-3 mx-auto\">\r\n                                <InputGroup.Prepend className=\"input-group-prepend\">\r\n                                    <InputGroup.Text className=\"input-group-text\">Human P-value:</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control as=\"select\" className=\"form-control\" id=\"human_pval_select\">\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                    <option value=\"9\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                </Form.Control>&nbsp;\r\n                                <div className=\"input-group-prepend\">\r\n                                    <div className=\"input-group-text\">Mouse P-value:</div>\r\n                                </div>\r\n                                <select className=\"form-control\" id=\"mouse_pval_select\">\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                    <option value=\"9\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                </select>\r\n                            </InputGroup>\r\n                            <div className=\"input-group-inline\">\r\n                                <Button variant=\"flat\" size=\"xxl\" id=\"search_btn\"\r\n                                        onClick={this.searchClick}>Search</Button>\r\n                            </div>\r\n                            <LoadingSpinner loading={loading}/>\r\n                        </Form>\r\n                    </div>\r\n                    {tableData ? this.displayTable(tableData) : null}\r\n\r\n                </div>\r\n                {/*Phenotype selection results drill down*/}\r\n                <div id=\"browser-iframe-container\" className=\"modal-container\">\r\n                    <a className=\"btn\" onClick={closeGenomeBrowser}>Close</a>\r\n                    <iframe id=\"genomeBrowser\" className=\"browser-iframe\">\r\n                    </iframe>\r\n                </div>\r\n            </div>);\r\n        else\r\n            return (\r\n                <PhenotypeResultBreakdown selectedPhenotype={this.state.selectedPhenotype}\r\n                                          breakdownData={this.state.breakdownData}\r\n                                          backBtnClick={this.resultBreakdownBackClicked}/>\r\n            );\r\n    }\r\n}\r\n\r\nvar offset = 20;\r\nvar result_total = 0;\r\nvar current_div = \".searchResultsContainer\";\r\n\r\nfunction loadGenomeBrowser() {\r\n    $(\"#browser-iframe-container\").show(\r\n        {\r\n            effect: \"scale\",\r\n            duration: 500,\r\n            complete: function () {\r\n                $(\"#genomeBrowser\").attr(\"src\", \"jbrowse/index.html?data=data\");\r\n            }\r\n        }\r\n    );\r\n    $(\"body\").css(\"background-color\", \"grey\");\r\n}\r\n\r\nfunction closeGenomeBrowser() {\r\n    $(\"#genomeBrowser\").attr(\"src\", \"\");\r\n    setTimeout(\r\n        function () {\r\n            $(\"#browser-iframe-container\").hide(\r\n                {\r\n                    effect: \"scale\",\r\n                    duration: 500\r\n                }\r\n            );\r\n        },\r\n        300\r\n    );\r\n    $(\"body\").css(\"background-color\", \"white\");\r\n}\r\n\r\n\r\nexport default PhenotypeSearch;","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Components\\MainMenuItem.js",["61","62","63"],"import React, {useCallback} from 'react';\r\nimport '../App.css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nclass MainMenuItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"menu-option\">\r\n            <div>\r\n                <img src={this.props.image} alt={this.props.alt}/>\r\n                <span>{this.props.heading}</span>\r\n                <p>{this.props.body}</p>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default MainMenuItem;","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\Components\\PhenotypeResultBreakdown.js",["64","65","66"],"import React from \"react\";\r\nimport './PhenotypeResultBreakdown.css';\r\nimport ResultTable from \"../../UtilityComponents/ResultTable\";\r\nimport $ from \"jquery\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"../../UtilityComponents/LoadingSpinner/LoadingSpinner\";\r\nimport configData from \"../../Config/config.json\";\r\nimport {forEach} from \"react-bootstrap/ElementChildren\";\r\n\r\nclass PhenotypeResultBreakdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.gwasStudyClicked = this.gwasStudyClicked.bind(this);\r\n        this.experimentClicked = this.experimentClicked.bind(this);\r\n        this.state = {selectedPhenotype: \"\", breakdownData: null, backBtnClick: null, loading:true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBreakdownData();\r\n    }\r\n\r\n    gwasStudyClicked(row) {\r\n        let studyID = $(row.currentTarget).attr(\"data-id\");\r\n        var win = window.open(\"https://www.gwascentral.org/study/\" + studyID, \"_blank\");\r\n        if (win)\r\n            win.focus();\r\n    }\r\n\r\n    experimentClicked(row) {\r\n        let selection = $(row.target).attr(\"data-id\");\r\n    }\r\n\r\n    getBreakdownData() {\r\n        let url_string = configData.api_server + \"controller.php?phenotypeBreakdown=&term=\" + this.props.selectedPhenotype;\r\n        axios.get(url_string)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data) {\r\n                        this.setState({breakdownData: response.data, loading: false});\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"An error occurred retrieving phenotype data.\");\r\n            });\r\n    }\r\n\r\n    getHumanTerm(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Mappings\"].length > 0) {\r\n                if (breakdownData[\"Mappings\"][0][\"sourceID\"].includes(\"HP\"))\r\n                    return breakdownData[\"Mappings\"][0][\"sourceID\"] + \" \" + breakdownData[\"Mappings\"][0][\"sourceLabel\"];\r\n                else\r\n                    return breakdownData[\"Mappings\"][0][\"mappedID\"] + \" \" + breakdownData[\"Mappings\"][0][\"mappedLabel\"];\r\n            } else {\r\n                return \"No mapping found\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getMouseTerm(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Mappings\"].length > 0) {\r\n                if (breakdownData[\"Mappings\"][0][\"sourceID\"].includes(\"MP\"))\r\n                    return breakdownData[\"Mappings\"][0][\"sourceID\"] + \" \" + breakdownData[\"Mappings\"][0][\"sourceLabel\"];\r\n                else\r\n                    return breakdownData[\"Mappings\"][0][\"mappedID\"] + \" \" + breakdownData[\"Mappings\"][0][\"mappedLabel\"];\r\n            } else {\r\n                return \"No mapping found\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getGWASStudies(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"GWAS Studies\"].length > 0) {\r\n\r\n            } else {\r\n                return \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getGeneKnockouts(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Gene Knockouts\"].length > 0) {\r\n\r\n            } else {\r\n                return \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getMappedSynonyms(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Mappings\"][0][\"mappedSynonyms\"].length > 0) {\r\n                return breakdownData[\"Mappings\"][0][\"mappedSynonyms\"].map((synonym, index) =>\r\n                <li>{synonym}</li>);\r\n            } else {\r\n                return <li>None</li>;\r\n            }\r\n        }\r\n    }\r\n\r\n    getSourceSynonyms(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Mappings\"][0][\"sourceSynonyms\"].length > 0) {\r\n                return breakdownData[\"Mappings\"][0][\"sourceSynonyms\"].map((synonym, index) =>\r\n                <li>{synonym}</li>);\r\n            } else {\r\n                return <li>None</li>;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {breakdownData, loading} = this.state;\r\n        return (\r\n            <div id=\"phenotypeResultsContainer\" className=\"container\">\r\n                <LoadingSpinner loading={loading} />\r\n                <a className=\"btn btn-link\" onClick={this.props.backBtnClick}>Back</a>\r\n                <div className=\"phenotype-breakdown-container\">\r\n                    <div className=\"row\">\r\n                        <h3 id=\"Selected-Phenotype\" className=\"col\">{this.props.selectedPhenotype}</h3>\r\n                    </div>\r\n                    {/* Mappings */}\r\n                    <div className=\"row center\">\r\n                        <div className=\"col\">\r\n                            <h3>Homo Sapiens</h3>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h3>Mus Musculus</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col highlight\">\r\n                            <span>Human Phenotype Term: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p id=\"HPO-Matched-Term\">{this.getHumanTerm(breakdownData)}</p>\r\n                        </div>\r\n                        <div className=\"col highlight\">\r\n                            <span>Mammalian Phenotype Term: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p id=\"MP-Matched-Term\">{this.getMouseTerm(breakdownData)}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* Synonyms */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col highlight\">\r\n                            <span>Synonyms: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <ul>\r\n                                {this.getMappedSynonyms(breakdownData)}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col highlight\">\r\n                            <span>Synonyms: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <ul>\r\n                                {this.getSourceSynonyms(breakdownData)}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    {/*Studies/Experiments*/}\r\n                    <div className=\"row\">\r\n                        <div className=\"col highlight\">\r\n                            <span>GWAS Studies: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p>{breakdownData ? breakdownData[\"GWAS Studies\"].length: 0}</p>\r\n                        </div>\r\n                        <div className=\"col highlight\">\r\n                            <span>Gene Knockouts: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p>{breakdownData ? breakdownData[\"Gene Knockouts\"].length: 0}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* Homolog Gene Studies/Experiments */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col center highlight\">\r\n                            <span><span id=\"numHomologousGenes\"></span> Homologous Genes Identified</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col center\">\r\n                            <ul>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col center highlight\">\r\n                            <span>GWAS Studies</span>\r\n                        </div>\r\n                        <div className=\"col center highlight\">\r\n                            <span>Gene Knockouts</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col center\">\r\n                            {breakdownData ? <ResultTable tableData={breakdownData[\"GWAS Studies\"]} onRowClick={this.gwasStudyClicked}/>: null}\r\n                        </div>\r\n                        <div className=\"col center\">\r\n                            {breakdownData ? <ResultTable tableData={breakdownData[\"Gene Knockouts\"]} onRowClick={this.experimentClicked}/>: null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhenotypeResultBreakdown;","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\ResultTable.js",["67","68","69","70"],"import React, {useCallback} from 'react';\r\nimport '../PhenotypeSearch/PhenotypeSearch.css';\r\nimport $ from 'jquery';\r\n\r\nclass ResultTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {tableData: {}, onRowClick: null};\r\n    }\r\n\r\n    getPageControls(dataLength) {\r\n        if (dataLength > 0) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <a className=\"table-prev btn btn-link disabled\" id=\"prev_page_btn\">&lt;- Previous Page</a>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <span className=\"page-counter\" id=\"pageNum\">Page 1</span>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a className=\"table-next btn btn-link disabled\" id=\"next_page_btn\">Next Page -&gt;</a>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (typeof this.props.tableData != \"undefined\" && this.props.tableData !== null)\r\n            if (this.props.tableData.length > 0) {\r\n                return (<div className=\"container\">\r\n                        {this.getPageControls(this.props.tableData.length)}\r\n                        <br/>\r\n                        <div className=\"info\" id=\"searchResults\">\r\n                            <table>\r\n                                <tbody>\r\n                                <tr>\r\n                                    {Object.keys(this.props.tableData[0]).map((header, index) => {\r\n                                        return (<th key={index}>{header}</th>)\r\n                                    })}\r\n                                </tr>\r\n\r\n                                {this.props.tableData.map((row, index) => {\r\n                                    return (<tr data-id={row[\"ID\"]} key={index} onClick={this.props.onRowClick}>\r\n                                        {Object.keys(row).map((key) => {\r\n                                            return (<td data-id={row[\"MP ID\"]}>{row[key]}</td>)\r\n                                        })}\r\n                                    </tr>)\r\n                                })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div>\r\n                        <br/>\r\n                        <br/>\r\n                        <p className=\"center\">No results found.</p>\r\n                    </div>\r\n                );\r\n            }\r\n        else\r\n            return null;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default ResultTable;",["71","72"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\LoadingSpinner\\LoadingSpinner.js",["73"],"import React, {useCallback} from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nclass LoadingSpinner extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading: false};\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return (\r\n                <div className=\"loading-container\">\r\n                    <div className=\"loading\">\r\n                        <div className=\"loader\">\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                        <h4>Loading...</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        else\r\n            return (null);\r\n    }\r\n}\r\n\r\nexport default LoadingSpinner;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":24},{"ruleId":"78","severity":1,"message":"82","line":6,"column":26,"nodeType":"80","messageId":"81","endLine":6,"endColumn":39},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":48,"nodeType":"80","messageId":"81","endLine":4,"endColumn":55},{"ruleId":"85","severity":1,"message":"86","line":92,"column":50,"nodeType":"87","messageId":"88","endLine":92,"endColumn":52},{"ruleId":"89","severity":1,"message":"90","line":172,"column":49,"nodeType":"91","endLine":172,"endColumn":83},{"ruleId":"89","severity":1,"message":"90","line":235,"column":21,"nodeType":"91","endLine":235,"endColumn":69},{"ruleId":"92","severity":1,"message":"93","line":236,"column":21,"nodeType":"91","endLine":236,"endColumn":75},{"ruleId":"83","severity":1,"message":"94","line":249,"column":5,"nodeType":"80","messageId":"81","endLine":249,"endColumn":11},{"ruleId":"83","severity":1,"message":"95","line":251,"column":5,"nodeType":"80","messageId":"81","endLine":251,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":253,"column":10,"nodeType":"80","messageId":"81","endLine":253,"endColumn":27},{"ruleId":"83","severity":1,"message":"97","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"83","severity":1,"message":"98","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":6,"column":5,"nodeType":"101","messageId":"102","endLine":8,"endColumn":6},{"ruleId":"83","severity":1,"message":"103","line":8,"column":9,"nodeType":"80","messageId":"81","endLine":8,"endColumn":16},{"ruleId":"83","severity":1,"message":"104","line":30,"column":13,"nodeType":"80","messageId":"81","endLine":30,"endColumn":22},{"ruleId":"89","severity":1,"message":"90","line":123,"column":17,"nodeType":"91","endLine":123,"endColumn":79},{"ruleId":"83","severity":1,"message":"97","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"83","severity":1,"message":"105","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":9},{"ruleId":"89","severity":1,"message":"90","line":16,"column":25,"nodeType":"91","endLine":16,"endColumn":92},{"ruleId":"89","severity":1,"message":"90","line":22,"column":25,"nodeType":"91","endLine":22,"endColumn":92},{"ruleId":"74","replacedBy":"106"},{"ruleId":"76","replacedBy":"107"},{"ruleId":"83","severity":1,"message":"97","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'TransitionGroup' is defined but never used.","Identifier","unusedVar","'CSSTransition' is defined but never used.","no-unused-vars","'Spinner' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'offset' is assigned a value but never used.","'current_div' is assigned a value but never used.","'loadGenomeBrowser' is defined but never used.","'useCallback' is defined but never used.","'useHistory' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'forEach' is defined but never used.","'selection' is assigned a value but never used.","'$' is defined but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation"]