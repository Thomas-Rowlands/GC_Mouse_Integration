[{"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\index.tsx":"1","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\reportWebVitals.ts":"2","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\App.tsx":"3","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Home.js":"4","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\PhenotypeSearch.js":"5","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Components\\MainMenuItem.js":"6","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\Components\\PhenotypeResultBreakdown.js":"7","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\ResultTable.js":"8","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\LoadingSpinner\\LoadingSpinner.js":"9"},{"size":616,"mtime":1612372176688,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1612365407714,"results":"12","hashOfConfig":"11"},{"size":850,"mtime":1612372044951,"results":"13","hashOfConfig":"11"},{"size":2433,"mtime":1612372273367,"results":"14","hashOfConfig":"11"},{"size":12556,"mtime":1612992814655,"results":"15","hashOfConfig":"11"},{"size":538,"mtime":1612366791587,"results":"16","hashOfConfig":"11"},{"size":7538,"mtime":1612876031448,"results":"17","hashOfConfig":"11"},{"size":2754,"mtime":1612961193503,"results":"18","hashOfConfig":"11"},{"size":1288,"mtime":1612565100863,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1s1jmwu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\index.tsx",[],["44","45"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\reportWebVitals.ts",[],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\App.tsx",["46","47"],"import React from 'react';\r\nimport './App.css';\r\n// @ts-ignore\r\nimport Home from \"./Home\";\r\n// @ts-ignore\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n// @ts-ignore\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport PhenotypeSearch from \"../PhenotypeSearch/PhenotypeSearch\";\r\n\r\nfunction App() {\r\n    return (<div className=\"App\">\r\n            <header className=\"App-header\">\r\n            </header>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route exact path=\"/PhenotypeSearch\">\r\n                        <PhenotypeSearch/>\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Home.js",[],["48","49"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\PhenotypeSearch.js",["50","51","52","53","54","55","56","57"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\Home\\Components\\MainMenuItem.js",["58","59","60"],"import React, {useCallback} from 'react';\r\nimport '../App.css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nclass MainMenuItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"menu-option\">\r\n            <div>\r\n                <img src={this.props.image} alt={this.props.alt}/>\r\n                <span>{this.props.heading}</span>\r\n                <p>{this.props.body}</p>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default MainMenuItem;","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\PhenotypeSearch\\Components\\PhenotypeResultBreakdown.js",["61","62","63","64","65"],"import React from \"react\";\r\nimport './PhenotypeResultBreakdown.css';\r\nimport ResultTable from \"../../UtilityComponents/ResultTable\";\r\nimport $ from \"jquery\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"../../UtilityComponents/LoadingSpinner/LoadingSpinner\";\r\n\r\nclass PhenotypeResultBreakdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {selectedPhenotype: \"\", breakdownData: null, backBtnClick: null, loading:true};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBreakdownData();\r\n    }\r\n\r\n    getBreakdownData() {\r\n        let url_string = \"http://gcmouseapi/controller.php?phenotypeBreakdown=&term=\" + this.props.selectedPhenotype;\r\n        axios.get(url_string)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    if (response.data) {\r\n                        this.setState({breakdownData: response.data, loading: false});\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"An error occurred retrieving phenotype data.\");\r\n            });\r\n    }\r\n\r\n    getHumanTerm(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Mappings\"].length > 0) {\r\n                if (breakdownData[\"Mappings\"][0][\"sourceID\"].includes(\"HP\"))\r\n                    return breakdownData[\"Mappings\"][0][\"sourceID\"] + \" \" + breakdownData[\"Mappings\"][0][\"sourceLabel\"];\r\n                else\r\n                    return breakdownData[\"Mappings\"][0][\"mappedID\"] + \" \" + breakdownData[\"Mappings\"][0][\"mappedLabel\"];\r\n            } else {\r\n                return \"No mapping found\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getMouseTerm(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Mappings\"].length > 0) {\r\n                if (breakdownData[\"Mappings\"][0][\"sourceID\"].includes(\"MP\"))\r\n                    return breakdownData[\"Mappings\"][0][\"sourceID\"] + \" \" + breakdownData[\"Mappings\"][0][\"sourceLabel\"];\r\n                else\r\n                    return breakdownData[\"Mappings\"][0][\"mappedID\"] + \" \" + breakdownData[\"Mappings\"][0][\"mappedLabel\"];\r\n            } else {\r\n                return \"No mapping found\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getGWASStudies(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"GWAS Studies\"].length > 0) {\r\n\r\n            } else {\r\n                return \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    getGeneKnockouts(breakdownData) {\r\n        if (breakdownData) {\r\n            if (breakdownData[\"Gene Knockouts\"].length > 0) {\r\n\r\n            } else {\r\n                return \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {breakdownData, loading} = this.state;\r\n        return (\r\n            <div id=\"phenotypeResultsContainer\" className=\"container\">\r\n                <LoadingSpinner loading={loading} />\r\n                <a className=\"btn btn-link\" onClick={this.props.backBtnClick}>Back</a>\r\n                <div className=\"phenotype-breakdown-container\">\r\n                    <div className=\"row\">\r\n                        <h3 id=\"Selected-Phenotype\" className=\"col\">{this.props.selectedPhenotype}</h3>\r\n                    </div>\r\n                    {/* Mappings */}\r\n                    <div className=\"row center\">\r\n                        <div className=\"col\">\r\n                            <h3>Homo Sapiens</h3>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h3>Mus Musculus</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col highlight\">\r\n                            <span>Human Phenotype Term: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p id=\"HPO-Matched-Term\">{this.getHumanTerm(breakdownData)}</p>\r\n                        </div>\r\n                        <div className=\"col highlight\">\r\n                            <span>Mammalian Phenotype Term: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p id=\"MP-Matched-Term\">{this.getMouseTerm(breakdownData)}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* Synonyms */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col highlight\">\r\n                            <span>Synonyms: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <ul>\r\n                                <li>None</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col highlight\">\r\n                            <span>Synonyms: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <ul>\r\n                                <li>None</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    {/*Studies/Experiments*/}\r\n                    <div className=\"row\">\r\n                        <div className=\"col highlight\">\r\n                            <span>GWAS Studies: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p>{this.getGWASStudies(breakdownData)}</p>\r\n                        </div>\r\n                        <div className=\"col highlight\">\r\n                            <span>Gene Knockouts: </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <p>{this.getGeneKnockouts(breakdownData)}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* Homolog Gene Studies/Experiments */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col center highlight\">\r\n                            <span><span id=\"numHomologousGenes\">5</span> Homologous Genes Identified</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col center\">\r\n                            <ul>\r\n                                <li><a onClick=\"loadGenomeBrowser();\">BRca2</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col center highlight\">\r\n                            <span>GWAS Studies</span>\r\n                        </div>\r\n                        <div className=\"col center highlight\">\r\n                            <span>Gene Knockouts</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div id=\"gwas-study-list\" className=\"col center\">\r\n                            <ul>\r\n                                <li><a>GWAS of Microscopic Feet</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        {/*<div className=\"col center\">*/}\r\n                        {/*    <ResultTable tableData={breakdownData[\"GWAS Studies\"]}/>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhenotypeResultBreakdown;","C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\ResultTable.js",["66","67","68","69"],"C:\\Users\\Thomas\\Github Repos\\GC_Mouse_Integration\\src\\UtilityComponents\\LoadingSpinner\\LoadingSpinner.js",["70"],"import React, {useCallback} from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nclass LoadingSpinner extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {loading: false};\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading)\r\n            return (\r\n                <div className=\"loading-container\">\r\n                    <div className=\"loading\">\r\n                        <div className=\"loader\">\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                        <h4>Loading...</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        else\r\n            return (null);\r\n    }\r\n}\r\n\r\nexport default LoadingSpinner;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":6,"column":9,"nodeType":"77","messageId":"78","endLine":6,"endColumn":24},{"ruleId":"75","severity":1,"message":"79","line":6,"column":26,"nodeType":"77","messageId":"78","endLine":6,"endColumn":39},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":48,"nodeType":"77","messageId":"78","endLine":4,"endColumn":55},{"ruleId":"82","severity":1,"message":"83","line":91,"column":50,"nodeType":"84","messageId":"85","endLine":91,"endColumn":52},{"ruleId":"86","severity":1,"message":"87","line":171,"column":49,"nodeType":"88","endLine":171,"endColumn":83},{"ruleId":"86","severity":1,"message":"87","line":234,"column":21,"nodeType":"88","endLine":234,"endColumn":69},{"ruleId":"89","severity":1,"message":"90","line":235,"column":21,"nodeType":"88","endLine":235,"endColumn":75},{"ruleId":"80","severity":1,"message":"91","line":248,"column":5,"nodeType":"77","messageId":"78","endLine":248,"endColumn":11},{"ruleId":"80","severity":1,"message":"92","line":250,"column":5,"nodeType":"77","messageId":"78","endLine":250,"endColumn":16},{"ruleId":"80","severity":1,"message":"93","line":252,"column":10,"nodeType":"77","messageId":"78","endLine":252,"endColumn":27},{"ruleId":"80","severity":1,"message":"94","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":27},{"ruleId":"80","severity":1,"message":"95","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":6,"column":5,"nodeType":"98","messageId":"99","endLine":8,"endColumn":6},{"ruleId":"80","severity":1,"message":"100","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"80","severity":1,"message":"101","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":9},{"ruleId":"86","severity":1,"message":"87","line":86,"column":17,"nodeType":"88","endLine":86,"endColumn":79},{"ruleId":"86","severity":1,"message":"87","line":157,"column":37,"nodeType":"88","endLine":157,"endColumn":71},{"ruleId":"86","severity":1,"message":"87","line":172,"column":37,"nodeType":"88","endLine":172,"endColumn":40},{"ruleId":"80","severity":1,"message":"94","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":27},{"ruleId":"80","severity":1,"message":"101","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":9},{"ruleId":"86","severity":1,"message":"87","line":16,"column":25,"nodeType":"88","endLine":16,"endColumn":92},{"ruleId":"86","severity":1,"message":"87","line":22,"column":25,"nodeType":"88","endLine":22,"endColumn":92},{"ruleId":"80","severity":1,"message":"94","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":27},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'TransitionGroup' is defined but never used.","Identifier","unusedVar","'CSSTransition' is defined but never used.","no-unused-vars","'Spinner' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'offset' is assigned a value but never used.","'current_div' is assigned a value but never used.","'loadGenomeBrowser' is defined but never used.","'useCallback' is defined but never used.","'useHistory' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ResultTable' is defined but never used.","'$' is defined but never used.","no-global-assign","no-unsafe-negation"]