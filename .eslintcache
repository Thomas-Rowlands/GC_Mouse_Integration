[{"/var/www/testing/GC_Mouse_Integration/src/index.tsx":"1","/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/ErrorBoundary.js":"2","/var/www/testing/GC_Mouse_Integration/src/reportWebVitals.ts":"3","/var/www/testing/GC_Mouse_Integration/src/Home/App.tsx":"4","/var/www/testing/GC_Mouse_Integration/src/Home/Home.js":"5","/var/www/testing/GC_Mouse_Integration/src/Genome/Genome.js":"6","/var/www/testing/GC_Mouse_Integration/src/PhenotypeSearch/PhenotypeSearch.js":"7","/var/www/testing/GC_Mouse_Integration/src/OntologyHierarchy/OntologyHierarchy.js":"8","/var/www/testing/GC_Mouse_Integration/src/Home/Components/MainMenuItem.js":"9","/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/ConfigData.js":"10","/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/ResultTable.js":"11","/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/LoadingSpinner/LoadingSpinner.js":"12","/var/www/testing/GC_Mouse_Integration/src/PhenotypeSearch/Components/PhenotypeResultBreakdown.js":"13","/var/www/testing/GC_Mouse_Integration/src/OntologyHierarchy/Components/OntologyTree/OntologyTree.js":"14","/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/TabPanel.js":"15","/var/www/testing/GC_Mouse_Integration/src/OntologyHierarchy/Components/OntologyTree/Components/StyledTreeItem.js":"16"},{"size":716,"mtime":1615368326644,"results":"17","hashOfConfig":"18"},{"size":982,"mtime":1614770802348,"results":"19","hashOfConfig":"18"},{"size":425,"mtime":1611918828934,"results":"20","hashOfConfig":"18"},{"size":1172,"mtime":1615561689341,"results":"21","hashOfConfig":"18"},{"size":2306,"mtime":1618576363660,"results":"22","hashOfConfig":"18"},{"size":3701,"mtime":1617958498783,"results":"23","hashOfConfig":"18"},{"size":11503,"mtime":1618563250164,"results":"24","hashOfConfig":"18"},{"size":26875,"mtime":1619007452734,"results":"25","hashOfConfig":"18"},{"size":1526,"mtime":1617194213941,"results":"26","hashOfConfig":"18"},{"size":91,"mtime":1617194213969,"results":"27","hashOfConfig":"18"},{"size":3501,"mtime":1618399521382,"results":"28","hashOfConfig":"18"},{"size":1248,"mtime":1614770802348,"results":"29","hashOfConfig":"18"},{"size":15483,"mtime":1618399521354,"results":"30","hashOfConfig":"18"},{"size":4319,"mtime":1618994508724,"results":"31","hashOfConfig":"18"},{"size":812,"mtime":1617194213973,"results":"32","hashOfConfig":"18"},{"size":2825,"mtime":1617194213941,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"751hkj",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"63"},"/var/www/testing/GC_Mouse_Integration/src/index.tsx",[],"/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/ErrorBoundary.js",[],"/var/www/testing/GC_Mouse_Integration/src/reportWebVitals.ts",[],"/var/www/testing/GC_Mouse_Integration/src/Home/App.tsx",["69","70"],"/var/www/testing/GC_Mouse_Integration/src/Home/Home.js",[],"/var/www/testing/GC_Mouse_Integration/src/Genome/Genome.js",[],"/var/www/testing/GC_Mouse_Integration/src/PhenotypeSearch/PhenotypeSearch.js",["71","72"],"/var/www/testing/GC_Mouse_Integration/src/OntologyHierarchy/OntologyHierarchy.js",["73","74"],"/var/www/testing/GC_Mouse_Integration/src/Home/Components/MainMenuItem.js",["75","76"],"/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/ConfigData.js",[],"/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/ResultTable.js",["77","78"],"/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/LoadingSpinner/LoadingSpinner.js",["79"],"/var/www/testing/GC_Mouse_Integration/src/PhenotypeSearch/Components/PhenotypeResultBreakdown.js",["80","81","82"],"/var/www/testing/GC_Mouse_Integration/src/OntologyHierarchy/Components/OntologyTree/OntologyTree.js",["83","84","85"],"import {Button, Paper, withStyles} from \"@material-ui/core\";\nimport {fade} from \"@material-ui/core/styles\";\nimport {animated, useSpring} from \"react-spring/web.cjs\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport TreeView from \"@material-ui/lab/TreeView\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport StyledTreeItem from \"./Components/StyledTreeItem\";\nimport _ from 'lodash';\n\nconst useStyles = theme => ({\n    root: {\n        marginTop: 20,\n        marginLeft: 5,\n        overflowY: \"scroll\",\n        height: \"70vh\",\n    },\n    highlight: {\n        backgroundColor: \"#a6a6ff\",\n    },\n    btn: {\n        marginRight: 20,\n    }\n});\n\nfunction TransitionComponent(props) {\n    const style = useSpring({\n        from: {opacity: 0, transform: 'translate3d(20px,0,0)'},\n        to: {opacity: props.in ? 1 : 0, transform: `translate3d(${props.in ? 0 : 20}px,0,0)`},\n    });\n    return (\n        <animated.div style={style}>\n            <Collapse {...props} />\n        </animated.div>\n    );\n}\n\nTransitionComponent.propTypes = {\n    /**\n     * Show the component; triggers the enter or exit states\n     */\n    in: PropTypes.bool,\n};\n\nclass OntologyTree extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            treeData: null,\n            expandedNodes: [''],\n            selectedNodes: [''],\n            selectedSpecies: \"Mouse\",\n            treeOntology: \"\",\n            onToggle: null,\n            onSelect: null,\n            onBtnClick: null,\n            sourceOntology: \"\",\n            mappingOntology: \"\",\n            selectedPhenotypeLabel: \"\",\n            treeID: \"\",\n        };\n        this.tempExpandedIds = [];\n    }\n\n    getTreeNodes = (nodes) => {\n        const {classes} = this.props;\n        const btn = nodes.hasMapping ?\n            <Button className={classes.btn} size=\"small\" onClick={() => this.props.onBtnClick(nodes.label)}\n                   style={{margin: 0}} color=\"primary\" variant=\"outlined\" id={nodes.id}\n            ><LinearScaleIcon fontSize=\"small\"/></Button> : null;\n        const tempChildNode = (nodes.hasChildren === true) && (_.isEmpty(nodes.children)) ?\n            <StyledTreeItem labelText={<CircularProgress color=\"inherit\" size={15}/>}/> : null;\n        if (!_.isEmpty(nodes.children)) {\n            nodes.children = _.orderBy(nodes.children, ['label'], ['asc']); // all nodes must be sorted alphabetically!\n        }\n        return (\n            <StyledTreeItem id={this.props.treeID + \"-\" + nodes.id.replace(\":\", \"-\")} onLabelClick={(e) => e.preventDefault()} key={nodes.id} nodeId={nodes.id}\n                            labelText={nodes.label} labelIcon={btn}>\n                {!_.isEmpty(nodes.children) ? Object.keys(nodes.children).map((key, index) => this.getTreeNodes(nodes.children[key])) : tempChildNode}\n            </StyledTreeItem>\n        );\n    }\n\n    setExpandedSourceNodes = (nodes, ids) => {\n        if (Array.isArray(ids[0]))\n            ids = ids[0];\n        ids.push(nodes.id);\n        this.tempExpandedSourceIds = ids;\n        return Array.isArray(nodes.isa) ? nodes.isa.map((node) => this.setExpandedSourceNodes(node, ids)) : ids;\n    }\n\n\n    render() {\n        const {classes} = this.props;\n        const {\n            loading,\n        } = this.state;\n        if (this.props.treeData === null || this.props.treeData === undefined) {\n            throw new Error('No ontology data received.');\n        }\n        return (\n            <TreeView id={this.props.treeID} className={classes.root} expanded={this.props.expanded}\n                      selected={this.props.selected}\n                      defaultCollapseIcon={<ArrowDropDownIcon/>} defaultExpandIcon={<ArrowRightIcon/>}\n                      defaultEndIcon={<div style={{width: 24}}/>} onNodeToggle={this.props.onToggle}\n                      onNodeSelect={this.props.onSelect}>\n                {this.getTreeNodes(this.props.treeData)}\n            </TreeView>\n        );\n\n    }\n\n}\n\nexport default withStyles(useStyles)(OntologyTree);\n\n",["86","87"],"/var/www/testing/GC_Mouse_Integration/src/UtilityComponents/TabPanel.js",["88"],"/var/www/testing/GC_Mouse_Integration/src/OntologyHierarchy/Components/OntologyTree/Components/StyledTreeItem.js",["89"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useTreeItemStyles = theme => ({\n  root: {\n    color: theme.palette.text.secondary,\n    '&:hover > $content': {\n      // backgroundColor: theme.palette.action.hover,\n    },\n    '&:focus > $content, &$selected > $content': {\n      // backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\n      color: 'var(--tree-view-color)',\n    },\n    '&:focus > $content $label, &:hover > $content $label, &$selected > $content $label': {\n      // backgroundColor: theme.palette.action.hover,\n    },\n  },\n  content: {\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: theme.spacing(2),\n    borderBottomRightRadius: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    fontWeight: theme.typography.fontWeightBold,\n    '$expanded > &': {\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  },\n  group: {\n    '& $content': {\n      // paddingLeft: theme.spacing(2),\n    },\n  },\n  expanded: {},\n  selected: {},\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit',\n      textAlign: 'left',\n  },\n});\n\nclass StyledTreeItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {label: \"\", color: \"\", bgColor: \"\",};\n    }\n\n\n\n    render() {\n        const {classes} = this.props;\n        const {labelText, labelIcon, labelInfo, color, bgColor,key, ...other} = this.props;\n\n        return (\n            <TreeItem\n                label={\n                    <div className={classes.label}>\n                        <Typography variant=\"body2\" className={classes.content} component=\"span\">\n                            {this.props.labelText}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"inherit\">\n                            {this.props.labelInfo}\n                        </Typography>\n                        <div className={classes.labelIcon} style={{float: 'right'}}>\n                            {labelIcon}\n                        </div>\n                    </div>\n                }\n                style={{\n                    '--tree-view-color': color,\n                    '--tree-view-bg-color': bgColor,\n                }}\n                key={this.props.key}\n             nodeId={this.props.nodeId}\n            classes={{\n        root: classes.root,\n        content: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        group: classes.group,\n        label: classes.label,\n            }}\n                {...other}\n            />\n        );\n    }\n}\nexport default withStyles(useTreeItemStyles)(StyledTreeItem);\n\n",{"ruleId":"90","severity":1,"message":"91","line":6,"column":9,"nodeType":"92","messageId":"93","endLine":6,"endColumn":24},{"ruleId":"90","severity":1,"message":"94","line":6,"column":26,"nodeType":"92","messageId":"93","endLine":6,"endColumn":39},{"ruleId":"95","severity":1,"message":"96","line":115,"column":50,"nodeType":"97","messageId":"98","endLine":115,"endColumn":52},{"ruleId":"99","severity":1,"message":"100","line":174,"column":80,"nodeType":"92","messageId":"93","endLine":174,"endColumn":95},{"ruleId":"99","severity":1,"message":"101","line":509,"column":13,"nodeType":"92","messageId":"93","endLine":509,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":537,"column":33,"nodeType":"104","endLine":537,"endColumn":54},{"ruleId":"99","severity":1,"message":"105","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"106","line":35,"column":16,"nodeType":"92","messageId":"93","endLine":35,"endColumn":24},{"ruleId":"99","severity":1,"message":"105","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"107","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":9},{"ruleId":"99","severity":1,"message":"105","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"108","line":68,"column":13,"nodeType":"92","messageId":"93","endLine":68,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":120,"column":34,"nodeType":"92","messageId":"111","endLine":120,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":141,"column":34,"nodeType":"92","messageId":"111","endLine":141,"endColumn":35},{"ruleId":"99","severity":1,"message":"112","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":22},{"ruleId":"99","severity":1,"message":"113","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"114","line":102,"column":13,"nodeType":"92","messageId":"93","endLine":102,"endColumn":20},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"99","severity":1,"message":"105","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"119","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},"@typescript-eslint/no-unused-vars","'TransitionGroup' is defined but never used.","Identifier","unusedVar","'CSSTransition' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'selectedSpecies' is assigned a value but never used.","'humanLiveSearchResults' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useCallback' is defined but never used.","'isZoomed' is assigned a value but never used.","'$' is defined but never used.","'selection' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'Paper' is defined but never used.","'fade' is defined but never used.","'loading' is assigned a value but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'SearchIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]